{"version":3,"file":"static/js/206.f1ce4fd9.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContItem = styled.li`\n  background-color: #f9fbfb;\n  padding-left: 10px;\n  border-radius: 7px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const ContList = styled.ul`\n  display: flex;\n  gap: 15px;\n  flex-direction: column;\n`;\n\nexport const ContWrap = styled.div`\n  display: flex;\n  align-items: center;\n  min-width: 220px;\n  gap: 10px;\n`;\n\nexport const ContTitle = styled.h2`\n  text-align: center;\n  margin: 20px auto;\n  color: #6b2877bb;\n  font-size: 24px;\n`;\n\nexport const Container = styled.div`\n  padding: 20px 0;\n`;\n\nexport const DialogWrap = styled.div`\n  padding: 50px;\n`;\n\nexport const DialogTitle = styled.p`\n  margin-bottom: 30px;\n  text-align: center;\n  color: rgba(138, 59, 202, 0.9);\n  font-size: 24px;\n`;\n\nexport const InputWrap = styled.div`\n  margin-bottom: 30px;\n`;\n\nexport const BtnWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import styled from 'styled-components';\n\nexport const WrapperFiler = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nexport const FilterTitle = styled.p`\n  margin-top: 15px;\n  text-align: center;\n  font-weight: 500;\n  font-size: 22px;\n  margin-bottom: 20px;\n  color: #6b2877bb;\n`;\nexport const FilterText = styled.p`\n  position: absolute;\n  top: 300px;\n  margin-top: 15px;\n  text-align: center;\n  font-weight: 500;\n  font-size: 26px;\n  margin-bottom: 20px;\n  color: #89269aba;\n`;\n","import { WrapperFiler, FilterText, FilterTitle } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filtration } from 'Redux/Filter/filterSlice';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { TextField, InputAdornment } from '@mui/material';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n  const contacts = useSelector(state => state.contacts.items);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const noContactsFound = filter !== '' && filteredContacts.length === 0;\n\n  return (\n    <>\n      <FilterTitle>Find contacts by name</FilterTitle>\n      <WrapperFiler>\n        <TextField\n          variant=\"standard\"\n          color=\"secondary\"\n          type=\"text\"\n          value={filter}\n          onChange={e => dispatch(filtration(e.target.value))}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon color=\"secondary\" fontSize=\"large\" />\n              </InputAdornment>\n            ),\n          }}\n        />\n        {noContactsFound && <FilterText>No contacts found</FilterText>}\n      </WrapperFiler>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  min-width: 100px;\n  gap: 10px;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const DialogText = styled.p`\n  margin-bottom: 30px;\n  text-align: center;\n  color: rgba(138, 59, 202, 0.9);\n  font-size: 24px;\n`;\n\nexport const DialogWrap = styled.div`\n  padding: 50px;\n`;\n\nexport const WrapBtn = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n`;\n","import { Form } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'Redux/Contacts/operations';\nimport { useState } from 'react';\nimport {\n  Container,\n  Wrap,\n  DialogText,\n  DialogWrap,\n  WrapBtn,\n} from './ContactForm.styled';\nimport { Notify } from 'notiflix';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport { Button, Dialog, TextField, InputAdornment } from '@mui/material';\nimport PortraitIcon from '@mui/icons-material/Portrait';\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\n\nexport const ContactForm = () => {\n  const [open, setOpen] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(false);\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const currentContacts = useSelector(state => state.contacts.items);\n  const loader = useSelector(state => state.contacts.isLoading);\n\n  const handleInputChange = () => {\n    const isValid = form.getFieldValue('name') && form.getFieldValue('number');\n    setIsFormValid(isValid);\n  };\n\n  const handleNumberKeyPress = e => {\n    const key = e.key;\n    const isAllowedKey = /^[0-9+\\-()\\s]+$/.test(key);\n    const isNumberPadKey =\n      (key.length === 1 && /\\d/.test(key)) ||\n      /^Digit\\d$/.test(key) ||\n      /^Numpad\\d$/.test(key);\n    const isDeleteKey = key === 'Backspace' || key === 'Delete';\n    if (!isAllowedKey && !isDeleteKey && !isNumberPadKey) {\n      e.preventDefault();\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleEscapeKeyDown = event => {\n    if (event.key === 'Escape') {\n      setOpen(false);\n    }\n  };\n\n  const showModal = () => {\n    form.resetFields();\n    setOpen(true);\n  };\n\n  const submit = value => {\n    const formatTel = () => {\n      const number = value.number;\n      const phoneLength = number.length;\n      if (phoneLength < 7) {\n        return `(${number.slice(0, 3)}) ${number.slice(3)}`;\n      }\n      return `(${number.slice(0, 3)}) ${number.slice(3, 6)}-${number.slice(\n        6,\n        10\n      )}`;\n    };\n\n    const newContact = { name: value.name, number: formatTel() };\n    const newContactName = newContact.name.toLowerCase();\n    if (\n      currentContacts.find(\n        contact => contact.name.toLowerCase() === newContactName\n      )\n    ) {\n      Notify.failure(`${newContact.name} is already in contact`);\n    } else {\n      dispatch(addContact(newContact));\n      if (!loader) {\n        form.resetFields();\n        setOpen(false);\n        Notify.success(`${newContact.name} is added to contacts`);\n      }\n    }\n  };\n\n  return (\n    <Wrap>\n      <Button\n        color=\"secondary\"\n        onClick={showModal}\n        title=\"add new contact\"\n        variant=\"outlined\"\n        style={{ marginBottom: '10px' }}\n      >\n        <Container>\n          <AddCircleOutlineIcon />\n          Add contact\n        </Container>\n      </Button>\n      <Dialog\n        footer={null}\n        open={open}\n        onCancel={() => setOpen(false)}\n        onKeyDown={handleEscapeKeyDown}\n        onClose={handleClose}\n      >\n        <DialogWrap>\n          <DialogText>Add new contact</DialogText>\n          <Form\n            name=\"normal_login\"\n            initialValues={{\n              name: '',\n              number: '',\n              remember: true,\n            }}\n            onFinish={submit}\n            onValuesChange={handleInputChange}\n            form={form}\n          >\n            <Form.Item\n              name=\"name\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input Name!',\n                  type: 'text',\n                },\n              ]}\n            >\n              <TextField\n                variant=\"standard\"\n                fullWidth\n                color=\"secondary\"\n                placeholder=\"Name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <PortraitIcon color=\"disabled\" fontSize=\"large\" />\n                    </InputAdornment>\n                  ),\n                  autoComplete: 'off',\n                }}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"number\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input Number!',\n                  type: 'phone',\n                },\n              ]}\n            >\n              <TextField\n                onKeyDown={handleNumberKeyPress}\n                variant=\"standard\"\n                fullWidth\n                color=\"secondary\"\n                placeholder=\"Number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <LocalPhoneIcon color=\"disabled\" fontSize=\"large\" />\n                    </InputAdornment>\n                  ),\n                  autoComplete: 'off',\n                }}\n              />\n            </Form.Item>\n            <Form.Item noStyle>\n              <WrapBtn>\n                <Button\n                  type=\"submit\"\n                  color=\"secondary\"\n                  title=\"add new contact\"\n                  variant=\"outlined\"\n                  disabled={!isFormValid}\n                >\n                  Create contact\n                </Button>\n              </WrapBtn>\n            </Form.Item>\n          </Form>\n        </DialogWrap>\n      </Dialog>\n    </Wrap>\n  );\n};\n","import {\n  ContItem,\n  ContList,\n  ContWrap,\n  ContTitle,\n  Container,\n  DialogWrap,\n  DialogTitle,\n  InputWrap,\n  BtnWrap,\n} from './Contacts.styled';\nimport { Loader } from '../../components/Loader/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  deleteContact,\n  updateContact,\n  fetchContacts,\n} from 'Redux/Contacts/operations';\nimport { Notify } from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Popconfirm } from 'antd';\n\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\nimport PortraitIcon from '@mui/icons-material/Portrait';\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\nimport { Button, Dialog, TextField, InputAdornment } from '@mui/material';\n\nconst Contacts = () => {\n  const [subName, setSubName] = useState('');\n  const [subNumber, setSubNumber] = useState('');\n  const [subId, setSubId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const [isChangeEnabled, setIsChangeEnabled] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleChange = () => {\n    const isNameChanged =\n      subName.toLowerCase() !==\n      contacts.find(contact => contact.id === subId)?.name.toLowerCase();\n\n    if (!isNameChanged) {\n      Notify.warning(`The name of the contact remains the same.`);\n      return;\n    }\n\n    const isNameAlreadyExists = contacts.some(\n      contact =>\n        contact.name.toLowerCase() === subName.toLowerCase() &&\n        contact.id !== subId\n    );\n\n    if (isNameAlreadyExists) {\n      Notify.warning(`A contact with the name \"${subName}\" already exists.`);\n      return;\n    }\n\n    dispatch(updateContact({ id: subId, name: subName, number: subNumber }));\n    setIsModalOpen(false);\n    Notify.success(`Contact modified`);\n  };\n\n  const handleNumberKeyPress = e => {\n    const key = e.key;\n    const isAllowedKey = /^[0-9+\\-()\\s]+$/.test(key);\n    const isNumberPadKey =\n      (key.length === 1 && /\\d/.test(key)) ||\n      /^Digit\\d$/.test(key) ||\n      /^Numpad\\d$/.test(key);\n    const isDeleteKey = key === 'Backspace' || key === 'Delete';\n    if (!isAllowedKey && !isDeleteKey && !isNumberPadKey) {\n      e.preventDefault();\n    }\n  };\n\n  const showModal = (name, number, id) => {\n    setSubNumber(number);\n    setSubName(name);\n    setSubId(id);\n    setIsModalOpen(true);\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  const { isLoading } = useSelector(state => state.contacts);\n  const contacts = useSelector(state => state.contacts.items);\n  const filterData = useSelector(state => state.filter).toLowerCase();\n\n  const visibleContacts = contacts.filter(subscriber =>\n    subscriber.name.toLowerCase().includes(filterData)\n  );\n\n  return (\n    <section>\n      <Container>\n        <div>\n          {contacts.length < 1 ? (\n            <ContTitle>Add your first contact</ContTitle>\n          ) : (\n            <Filter />\n          )}\n          <ContactForm />\n          {isLoading && <Loader />}\n        </div>\n        <ContList>\n          {visibleContacts.map(({ id, name, number }) => (\n            <ContItem key={id}>\n              <ContWrap>\n                <PortraitIcon color=\"disabled\" fontSize=\"large\" />\n                {name}:\n              </ContWrap>\n              <ContWrap>\n                <LocalPhoneIcon color=\"disabled\" fontSize=\"large\" />\n                {number}\n              </ContWrap>\n              <div>\n                <Button\n                  variant=\"outlined\"\n                  onClick={() => showModal(name, number, id)}\n                  style={{ marginRight: '8px' }}\n                >\n                  <DriveFileRenameOutlineIcon />\n                  Edit\n                </Button>\n                <Popconfirm\n                  title=\"Are you sure to delete this contact?\"\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                  onConfirm={() => {\n                    dispatch(deleteContact(id));\n                    Notify.success(`Contact deleted`);\n                  }}\n                >\n                  <Button\n                    variant=\"outlined\"\n                    title=\"delete contact\"\n                    color=\"error\"\n                  >\n                    <DeleteOutlineIcon /> Delete\n                  </Button>\n                </Popconfirm>\n              </div>\n            </ContItem>\n          ))}\n\n          <Dialog open={isModalOpen} onClose={handleCancel}>\n            <DialogWrap>\n              <DialogTitle id=\"modal-title\">Edit a contact</DialogTitle>\n              <InputWrap>\n                <TextField\n                  placeholder=\"Name\"\n                  variant=\"standard\"\n                  fullWidth\n                  color=\"success\"\n                  value={subName}\n                  onChange={({ target }) => {\n                    setSubName(target.value);\n                    setIsChangeEnabled(target.value && subNumber);\n                  }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <PortraitIcon color=\"disabled\" fontSize=\"large\" />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </InputWrap>\n              <InputWrap>\n                <TextField\n                  onKeyDown={handleNumberKeyPress}\n                  placeholder=\"Number\"\n                  variant=\"standard\"\n                  fullWidth\n                  color=\"success\"\n                  value={subNumber}\n                  onChange={({ target }) => {\n                    setSubNumber(target.value);\n                    setIsChangeEnabled(subName && target.value);\n                  }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <LocalPhoneIcon color=\"disabled\" fontSize=\"large\" />\n                      </InputAdornment>\n                    ),\n                  }}\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                />\n              </InputWrap>\n              <BtnWrap>\n                <Button\n                  variant=\"outlined\"\n                  onClick={handleChange}\n                  disabled={!isChangeEnabled}\n                >\n                  Change\n                </Button>\n                <Button\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={handleCancel}\n                >\n                  Close\n                </Button>\n              </BtnWrap>\n            </DialogWrap>\n          </Dialog>\n        </ContList>\n      </Container>\n    </section>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContItem","styled","_templateObject","_taggedTemplateLiteral","ContList","_templateObject2","ContWrap","_templateObject3","ContTitle","_templateObject4","Container","_templateObject5","DialogWrap","_templateObject6","DialogTitle","_templateObject7","InputWrap","_templateObject8","BtnWrap","_templateObject9","WrapperFiler","FilterTitle","FilterText","Filter","dispatch","useDispatch","filter","useSelector","state","filteredContacts","contacts","items","contact","name","toLowerCase","includes","noContactsFound","length","_jsxs","_Fragment","children","_jsx","TextField","variant","color","type","value","onChange","e","filtration","target","InputProps","startAdornment","InputAdornment","position","SearchIcon","fontSize","Wrap","DialogText","WrapBtn","ContactForm","_useState","useState","_useState2","_slicedToArray","open","setOpen","_useState3","_useState4","isFormValid","setIsFormValid","_Form$useForm","Form","form","currentContacts","loader","isLoading","Button","onClick","resetFields","title","style","marginBottom","AddCircleOutlineIcon","Dialog","footer","onCancel","onKeyDown","event","key","onClose","initialValues","number","remember","onFinish","newContact","concat","slice","formatTel","newContactName","find","Notify","addContact","onValuesChange","isValid","getFieldValue","rules","required","message","fullWidth","placeholder","pattern","PortraitIcon","autoComplete","isAllowedKey","test","isNumberPadKey","preventDefault","LocalPhoneIcon","noStyle","disabled","subName","setSubName","subNumber","setSubNumber","_useState5","_useState6","subId","setSubId","_useState7","_useState8","isModalOpen","setIsModalOpen","_useState9","_useState10","isChangeEnabled","setIsChangeEnabled","useEffect","fetchContacts","handleCancel","filterData","visibleContacts","subscriber","Loader","map","_ref","id","showModal","marginRight","DriveFileRenameOutlineIcon","Popconfirm","okText","cancelText","onConfirm","deleteContact","DeleteOutlineIcon","_ref2","_ref3","_contacts$find","some","updateContact"],"sourceRoot":""}